# Copyright (c) 2023 Devexperts LLC.
# SPDX-License-Identifier: MPL-2.0

name: release

on:
  workflow_dispatch:
    inputs:
      version:
        default: "${{github.ref_name}}"
        description: 'Package Version'
        required: false
        type: string
      publish:
        description: 'Publish The Release'
        default: 'true'
        required: true
        type: boolean
      use_latest_tag:
        description: 'Try To Use Latest GitHub Tag'
        default: 'false'
        required: true
        type: boolean

jobs:
  get_latest_tag:
    name: Get Latest Tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: false
      
      - name: Populate Latest Tag
        run: echo "latest_tag=${{steps.get-latest-tag.outputs.tag }}" >> $GITHUB_OUTPUT
        
  build_package_and_upload:
    name: Build, Package & Upload
    needs: [get_latest_tag]
    strategy:
      matrix:
        #        os: [windows-latest, macos-latest, ubuntu-latest]
        os: [ windows-latest, macos-latest, ubuntu-22.04 ]
        buildType: [ Release, Debug ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Prepare build
        run: |
          ls
          mkdir ${{github.workspace}}/build-${{matrix.buildType}}    

      - name: Configure CMake (by tag)
        if: ${{ !inputs.use_latest_tag && startsWith(github.ref, 'refs/tags/') }}
        run: cmake -B ${{github.workspace}}/build-${{matrix.buildType}} -DCMAKE_BUILD_TYPE=${{matrix.buildType}} -DDXFCXX_VERSION=${{github.ref_name}} -DDXFCXX_PACKAGE_SUFFIX=-${{matrix.buildType}}

      - name: Configure CMake (by latest tag)
        if: ${{ inputs.use_latest_tag }}
        run: cmake -B ${{github.workspace}}/build-${{matrix.buildType}} -DCMAKE_BUILD_TYPE=${{matrix.buildType}} -DDXFCXX_VERSION=${{needs.get_latest_tag.outputs.latest_tag}} -DDXFCXX_PACKAGE_SUFFIX=-${{matrix.buildType}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build-${{matrix.buildType}} --config ${{matrix.buildType}}

      - name: Pack
        working-directory: ${{github.workspace}}/build-${{matrix.buildType}}
        run: cpack -G ZIP -C ${{matrix.buildType}} --config ./dxFeedGraalCxxApiPackConfig.cmake

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: build-${{matrix.buildType}}/*.zip

  publish_release:
    if: ${{ inputs.publish }}
    runs-on: ubuntu-latest
    name: Publish Release
    needs: [get_latest_tag, build_package_and_upload]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3

      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}

      - name: Display structure of downloaded files
        run: ls -R
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.zip
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
